/*
 * Copyright (c) 2022 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define QWERTY_BASE 1
#define EQUALS60 1
#define BOTTOM_ORTHO   1

// #define BOTTOM_MIT     1

#define NAV_L 1
#define NUM_L 2
#define SYM_L 3

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace

&lt { quick_tap_ms = <200>; };

/ {
    tap_dances {
        shifty: shift_caps_word {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_SHIFTY";
            #binding-cells = <0>;
            tapping-term-ms = <150>;
            bindings = <&kp LSHFT>, <&caps_word>;
        };
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "Base";
            bindings = <
&kp ESC           &kp N1     &kp N2        &kp N3            &kp N4  &kp N5     &kp N6     &kp N7  &kp N8     &kp N9    &kp N0        &kp BACKSPACE
&kp TAB           &kp Q      &kp W         &kp E             &kp R   &kp T      &kp Y      &kp U   &kp I      &kp O     &kp P         &kp BACKSPACE
&mt LCTRL ESCAPE  &kp A      &kp S         &kp D             &kp F   &kp G      &kp H      &kp J   &kp K      &kp L     &kp SEMI      &kp SQT
&kp LSHFT         &kp Z      &kp X         &kp C             &kp V   &kp B      &kp N      &kp M   &kp COMMA  &kp DOT   &kp FSLH      &kp RET
&mo 4             &kp LCTRL  &kp LEFT_ALT  &kp LEFT_COMMAND  &mo 1   &kp SPACE  &kp SPACE  &mo 2   &kp LEFT   &kp DOWN  &kp UP_ARROW  &kp RIGHT
            >;
        };

        lower_layer {
            label = "lower";
            bindings = <
&kp TILDE  &kp EXCL  &kp AT  &kp HASH  &kp DOLLAR  &kp PERCENT  &kp CARET  &kp AMPERSAND  &kp STAR       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PIPE
&kp TILDE  &kp EXCL  &kp AT  &kp HASH  &kp DOLLAR  &kp PERCENT  &kp CARET  &kp AMPERSAND  &kp ASTERISK   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PIPE
&trans     &trans    &trans  &trans    &trans      &trans       &trans     &kp UNDER      &kp PLUS       &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PIPE
&trans     &kp Z     &kp X   &kp C     &kp V       &trans       &trans     &trans         &kp LESS_THAN  &kp GREATER_THAN      &kp QUESTION           &trans
&trans     &trans    &trans  &trans    &mo 3       &trans       &trans     &mo 3          &trans         &trans                &trans                 &trans
            >;
        };

        raise_layer {
            label = "raise";
            bindings = <
&kp GRAVE  &kp N1      &kp N2     &kp N3      &kp N4       &kp N5  &kp N6  &kp N7     &kp N8     &kp N9    &kp N0    &trans
&kp GRAVE  &kp N1      &kp N2     &kp N3      &kp N4       &kp N5  &kp N6  &kp N7     &kp N8     &kp N9    &kp N0    &trans
&trans     &trans      &trans     &trans      &trans       &trans  &trans  &kp MINUS  &kp EQUAL  &kp LBKT  &kp RBKT  &kp BSLH
&trans     &kp K_UNDO  &kp K_CUT  &kp K_COPY  &kp K_PASTE  &trans  &trans  &trans     &trans     &trans    &trans    &trans
&trans     &trans      &trans     &trans      &mo 3        &trans  &trans  &mo 3      &kp LGUI   &trans    &trans    &trans
            >;
        };

        adjust_layer {
            label = "adjust";
            bindings = <
&trans  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6    &kp F7     &kp F8        &kp F9     &kp F10  &bootloader
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans     &trans        &trans     &trans   &bootloader
&trans  &trans  &trans  &trans  &trans  &trans  &kp LEFT  &kp DOWN   &kp UP_ARROW  &kp RIGHT  &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &kp HOME  &kp PG_DN  &kp PG_UP     &kp END    &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans     &trans        &trans     &trans   &trans
            >;
        };

        fn_layer {
            bindings = <
&trans             &bt BT_SEL 1  &bt BT_SEL 2   &bt BT_SEL 3  &bt BT_SEL 4  &trans        &trans              &trans                &trans                 &trans               &trans             &trans
&out OUT_USB       &out OUT_BLE  &trans         &trans        &trans        &trans        &trans              &trans                &trans                 &trans               &trans             &trans
&ext_power EP_TOG  &trans        &trans         &trans        &trans        &trans        &kp LG(LEFT_BRACE)  &kp LG(MINUS)         &kp LG(EQUAL)          &kp LG(RIGHT_BRACE)  &trans             &trans
&trans             &trans        &trans         &trans        &trans        &trans        &kp LG(GRAVE)       &kp LG(LEFT_BRACKET)  &kp LG(RIGHT_BRACKET)  &kp C_MUTE           &kp C_VOLUME_DOWN  &kp C_VOL_UP
&trans             &trans        &kp BACKSPACE  &kp ENTER     &trans        &kp LG(LBKT)  &kp LG(RBKT)        &trans                &trans                 &kp C_PREV           &kp C_PLAY_PAUSE   &kp C_NEXT
            >;

            label = "fn";
        };
    };
};
